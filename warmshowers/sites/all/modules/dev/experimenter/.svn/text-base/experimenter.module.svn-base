<?php
/* $Id$ */


/**
 * Valid permissions for this module
 * An array of valid permissions for the experimenter module
 */
function experimenter_perm() {
  /* just allow anyone access */
  return array('use experimenter');
} // function experimenter_perm()

function exp_get_absolute_path($path) { 
	if (DIRECTORY_SEPARATOR=='/') {
  		$absolute_path = realpath($path);
	}
	else {
  		$absolute_path = str_replace('\\', '/', realpath($path)).'/';
	}
	return $absolute_path;
}

function experimenter_menu() {

  $items = array();

	$mypath = realpath(drupal_get_path('module','experimenter'));
	$mypath = exp_get_absolute_path(drupal_get_path('module','experimenter'));
	
     // Other items ...
    $items[] = array('path' => 'experimenter',
      'title' => t('Experimenter form'),
      'callback' => 'drupal_get_form',
      'callback arguments' => 'experimenter_form_page',
      'access' => user_access('use experimenter'),
      'type' => MENU_NORMAL_ITEM,
    );
    $items[] = array('path' => 'delete_cookie',
      'title' => t('Delete map cookies'),
      'callback' => 'delete_map_cookies',
      'access' => user_access('use experimenter'),
      'type' => MENU_NORMAL_ITEM,
    );
    $items[] = array('path' => 'show_cookies',
      'title' => t('Show map cookies'),
      'callback' => 'showcookies',
      'access' => user_access('use experimenter'),
      'type' => MENU_NORMAL_ITEM,
    );    
    $items[] = array('path' => 'user_problems',
      'title' => t('User login problems'),
      'callback' => 'user_problems',
      'access' => user_access('use experimenter'),
      'type' => MENU_NORMAL_ITEM,
    );
    $items[] = array(
    	'path' => 'expmap',
    	'title' => 'ExpMap',
    	'callback' => 'expmap',
    	'access' => user_access('use experimenter'),
    	'type' => MENU_NORMAL_ITEM,
    );
   $items[] = array(
    	'path' => 'iptc_test',
    	'title' => 'IPTC Test',
    	'callback' => 'iptc_test',
    	'access' => user_access('use experimenter'),
    	'type' => MENU_NORMAL_ITEM,
    );
 
//    $items[] = array('path' => 'testget',
//      'title' => t('Experimenter test get'),
//      'callback' => 'experimenter_testget',
//      'callback arguments' => 'experimenter_form_page',
//      'access' => user_access('use experimenter'),
//      'type' => MENU_NORMAL_ITEM,
//    );
 

  return $items;
}

function expmap() {
	$key = variable_get("user_location_google_key", ""); 
	$path = drupal_get_path('module','experimenter');
	$user = user_load(array('uid'=>'1165'));

	drupal_set_html_head('
   		<script src="http://maps.google.com/maps?file=api&v=2.s&key='.$key .'" type="text/javascript"></script>');
	drupal_add_js(drupal_get_path('module','wsmap') . '/firebug/firebug.js');
	drupal_add_js("$path/junklocation.js");

	
	$output .= <<<OUTPUT
	
	<div class="mapholder">
	<p>Here is a map showing the location for this host. 
	Please note that this may be an approximate location, and it also may be an incorrect location. 
	Please make sure to make contact with the host before using this information. 
	</p>
    <div id="locationmap" style="width: 100%; height: 480px; border: 1px solid black;">
	<b>A more recent browser (like Firefox or Internet Explorer 6+) must be used and javaScript must be enabled in order for you to see or use the maps on Warmshowers.org.</b> 
      However, it seems JavaScript is either disabled or not supported by your browser. 
      To view the map, enable JavaScript by changing your browser options, and then 
      try again.  Alternately, you might want to try the excellent free <a href="http://getfirefox.com">Firefox browser</a>.<br/><br/>
 	

	</div>

    <div id="locationmap_debug" class="debug" ></div>


	<div id="location_lat"  class="debug">$user->latitude</div>
		<div id="location_lon" class="debug">$user->longitude</div>
		<div id="infowindowhtml" class="debug"><div class="infowindow">
        </div></div>

		<div id="location_description">Latitude/Longitude=$user->latitude/$user->longitude.</div>			Geocoding courtesy of <a href='http://geonames.org'>geonames.org</a> and <a href='http://maps.google.com'>Google Maps API</a>.</div>
OUTPUT;

	return $output;


}
function delete_map_cookies() {
	$cookies = "mapLatitude mapLongitude mapZoom mapCountry";
	
	foreach(explode(" ", $cookies) as $item=>$value) {
		setcookie($value,null,0);
		$output .= "$value=" . $_COOKIE[$value] . "<br>";
	}
	return("Map cookies are: <br/>".$output);;
  	

}

function showcookies() {
	$cookies = "mapLatitude mapLongitude mapZoom mapCountry";
	
	foreach(explode(" ", $cookies) as $item=>$value) {
		$output .= "$value=" . $_COOKIE[$value] . "<br/>";
	}
	return("Map cookies deleted: $output");
  	

}

function experimenter_form_page() {
	drupal_add_js(drupal_get_path('module','experimenter') . '/experimenter.js');
	
	$sql = "show tables";
	$result = db_query($sql);
	while ($row = db_fetch_array($result)) {
		if ($row[0] == 'location') {
			$x = $row[0];
		}
	}

	
  $checkbox_list = array(
  	'lawn' => t("Lawn space to camp"),
  	'kitchen' => t("Kitchen for cooking"),
  	'storage' => t("Storage"),
  	
  );
  
  $form['something'] = array(
  	'#type' => 'markup',
  	'#value' => "<div id='wsmap_map'>This is the wsmap_map div</div>",
  	);
  
  $form['testcb']  = array(
  	 '#type'=>'checkbox',
  	 '#title' => 'Click to send event to wsmap',
  	 '#default_value' => true,
  	 '#attributes' => array('onchange' => '$("#wsmap_map").trigger("loadMarkersComplete", ["loadMarkersComplete was triggered"]);',
  	 ),
  
  ); $form['testcb2']  = array(
  	 '#type'=>'checkbox',
  	 '#title' => 'Click to select the test textfield',
  	 '#default_value' => false,
  	 '#attributes' => array('onchange' => 'select_textfield();'),
  
  );
  $form['textfield'] = array(
  	'#type' => 'textfield',
  	'#title' => 'Test textfield',
  	'#default_value' => 'Some text that could be selected'
  
  );
  
  $form['checkboxes'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Stuff provided'),
    '#options' => $checkbox_list,
  );
  $form['maxcyclists'] = array(
  	'#type' =>'select',
  	'#title' => "Max Guests",
  	'#options' => array(1=>"One", 2=>"Two", 3=>"three"),
  		
  );
  $form['submit'] = array(
  	'#type' => 'submit',
  	'#value' => 'Submit',
  );


  return $form;
}

function experimenter_form_page_submit($form_id, $form_values) {
	//drupal_add_js("alert('testing');", 'inline');
	print '<script language="javascript">alert("testing");</script>';
	$myarray = array("one", "two", "three", "four");
	$values = array(1,2,3,4);
	$myplaceholders = array_fill(0,count($myarray),"'%s'");
	$myplaceholders = implode(", ",$myplaceholders);
	$myarray = implode(", ",$myarray);
	$sql = "insert into {junk} values ($myarray) ($myplaceholders)";
	$x=1;
}

function experimenter_testget() {
	print "this is a test of this";
	exit;
	
	1;
}



function iptc_test() {
	
$mypath = drupal_get_path('module','experimenter');

$photo="files/DSC03522 Another beautiful place for a campsite - getting closer to Durango.JPG";
$fullpath = experimenter_get_absolute_path($photo);

$output .= "EXIF:</br/>" . output_exif_data($fullpath);
$output .= "IPTC:<br/>".output_iptc_data($fullpath);
return $output;
}

function output_iptc_data( $image_path ) {   
    $size = getimagesize ( $image_path, $info);       
     if(is_array($info)) {   
        $iptc = iptcparse($info["APP13"]);
        foreach (array_keys($iptc) as $s) {             
            $c = count ($iptc[$s]);
            for ($i=0; $i <$c; $i++)
            {
                $output .= $s.' = '.$iptc[$s][$i].'<br>';
            }
        }                 
    }         
    return $output;   
}

function  output_exif_data($image_path) {
	$exif = exif_read_data($image_path, 0, true);
foreach ($exif as $key => $section) {
    foreach ($section as $name => $val) {
        $output .= "$key.$name: ".drupal_to_js($val) . "<br />\n";
    }
}
return $output;

}
function experimenter_get_absolute_path($path) {
	if (DIRECTORY_SEPARATOR=='/') {
  		$absolute_path = realpath($path);
	}
	else {
  		$absolute_path = str_replace('\\', '/', realpath($path));
	}
	return $absolute_path;
}
